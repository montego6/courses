# Generated by Django 4.2.2 on 2023-06-20 17:19

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=80)),
                ("short_description", models.CharField(db_index=True, max_length=200)),
                ("full_description", models.CharField(max_length=3000)),
                ("price", models.PositiveIntegerField()),
                ("language", models.CharField(max_length=40)),
                (
                    "what_will_learn",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=40), size=20
                    ),
                ),
                (
                    "requirements",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=60), size=12
                    ),
                ),
                ("options", models.JSONField()),
                ("date_created", models.DateField(auto_now_add=True, null=True)),
                ("date_updated", models.DateField(auto_now=True, null=True)),
                ("is_published", models.BooleanField(default=False)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "students",
                    models.ManyToManyField(
                        related_name="student_courses", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
    ]
